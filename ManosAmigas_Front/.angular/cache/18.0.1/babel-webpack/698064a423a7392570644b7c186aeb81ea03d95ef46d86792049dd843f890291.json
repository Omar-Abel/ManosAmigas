{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseUrl = 'https://localhost:7000/api/User'; // Cambia esto a la URL de tu API\n    }\n    login(email, password) {\n      return this.http.post(`${this.baseUrl}/login`, {\n        email,\n        password\n      }).subscribe(response => {\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n          this.router.navigate(['/activities']);\n        }\n      });\n    }\n    isAuthenticated() {\n      return !!localStorage.getItem('token');\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":{"version":3,"names":["AuthService","constructor","http","router","baseUrl","login","email","password","post","subscribe","response","token","localStorage","setItem","navigate","isAuthenticated","getItem","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Omar Lora\\Desktop\\Proyecto Final\\ManosAmigas\\ManosAmigas_Front\\src\\services\\auth.service.ts"],"sourcesContent":["// auth.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private baseUrl = 'https://localhost:7000/api/User'; // Cambia esto a la URL de tu API\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http.post<any>(`${this.baseUrl}/login`, { email, password })\r\n      .subscribe(response => {\r\n        if (response.token) {\r\n          localStorage.setItem('token', response.token);\r\n          this.router.navigate(['/activities']);\r\n        }\r\n      });\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,WAAaA,WAAW;EAAlB,MAAOA,WAAW;IAGtBC,YAAoBC,IAAgB,EAAUC,MAAc;MAAxC,KAAAD,IAAI,GAAJA,IAAI;MAAsB,KAAAC,MAAM,GAANA,MAAM;MAF5C,KAAAC,OAAO,GAAG,iCAAiC,CAAC,CAAC;IAEW;IAEhEC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;MACnC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACJ,OAAO,QAAQ,EAAE;QAAEE,KAAK;QAAEC;MAAQ,CAAE,CAAC,CACrEE,SAAS,CAACC,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,KAAK,EAAE;UAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACC,KAAK,CAAC;UAC7C,IAAI,CAACR,MAAM,CAACW,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;IACN;IAEAC,eAAeA,CAAA;MACb,OAAO,CAAC,CAACH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IACxC;IAAC,QAAAC,CAAA,G;uBAjBUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;IAAA,QAAAC,EAAA,G;aAAXxB,WAAW;MAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;MAAAC,UAAA,EAFV;IAAM;;SAEP3B,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}