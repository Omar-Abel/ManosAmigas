{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from '../navbar/navbar.component';\nlet ActivityListComponent = class ActivityListComponent {\n  constructor(activityService) {\n    this.activityService = activityService;\n    this.activities = [];\n    this.selectedActivity = null;\n    this.isModalOpen = false;\n  }\n  ngOnInit() {\n    this.loadActivities();\n  }\n  loadActivities() {\n    this.activityService.getActivities().subscribe({\n      next: response => {\n        if (response.success === 1) {\n          this.activities = response.data;\n        } else {\n          console.error('Error al cargar actividades');\n        }\n      },\n      error: error => {\n        console.error('Error al obtener actividades', error);\n      }\n    });\n  }\n  showDetails(activity) {\n    this.selectedActivity = activity;\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n    this.selectedActivity = null;\n  }\n  enrollInActivity(activity) {\n    // Implementar la l贸gica para inscribirse en la actividad\n    console.log('Inscribirse en la actividad:', activity);\n  }\n  deleteActivity(activity) {\n    // Implementar la l贸gica para eliminar la actividad\n    console.log('Eliminar la actividad:', activity);\n  }\n};\nActivityListComponent = __decorate([Component({\n  selector: 'app-activity-list',\n  standalone: true,\n  imports: [CommonModule, NavbarComponent],\n  templateUrl: './activity-list.component.html',\n  styleUrls: ['./activity-list.component.css']\n})], ActivityListComponent);\nexport { ActivityListComponent };","map":{"version":3,"names":["Component","CommonModule","NavbarComponent","ActivityListComponent","constructor","activityService","activities","selectedActivity","isModalOpen","ngOnInit","loadActivities","getActivities","subscribe","next","response","success","data","console","error","showDetails","activity","closeModal","enrollInActivity","log","deleteActivity","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\Omar Lora\\Desktop\\Proyecto Final\\ManosAmigas\\ManosAmigas_Front\\src\\app\\activity-list\\activity-list.component.ts"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from '../navbar/navbar.component';\r\nimport { ActivityService } from '../../services/activity.service';\r\nimport { OnInit } from '@angular/core';\r\nimport { Activity } from '../../models/activity';\r\n\r\n\r\n@Component({\r\n  selector: 'app-activity-list',\r\n  standalone: true,\r\n  imports: [CommonModule, NavbarComponent],\r\n  templateUrl: './activity-list.component.html',\r\n  styleUrls: ['./activity-list.component.css']\r\n})\r\n\r\nexport class ActivityListComponent implements OnInit {\r\n  activities: Activity[] = [];\r\n  selectedActivity: Activity | null = null;\r\n  isModalOpen: boolean = false;\r\n\r\n  constructor(private activityService: ActivityService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadActivities();\r\n  }\r\n\r\n  loadActivities(): void {\r\n    this.activityService.getActivities().subscribe({\r\n      next: (response) => {\r\n        if (response.success === 1) {\r\n          this.activities = response.data;\r\n        } else {\r\n          console.error('Error al cargar actividades');\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error al obtener actividades', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  showDetails(activity: Activity): void {\r\n    this.selectedActivity = activity;\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.isModalOpen = false;\r\n    this.selectedActivity = null;\r\n  }\r\n\r\n  enrollInActivity(activity: Activity): void {\r\n    // Implementar la l贸gica para inscribirse en la actividad\r\n    console.log('Inscribirse en la actividad:', activity);\r\n  }\r\n\r\n  deleteActivity(activity: Activity): void {\r\n    // Implementar la l贸gica para eliminar la actividad\r\n    console.log('Eliminar la actividad:', activity);\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAmB,eAAe;AACpD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,4BAA4B;AAcrD,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAJnC,KAAAC,UAAU,GAAe,EAAE;IAC3B,KAAAC,gBAAgB,GAAoB,IAAI;IACxC,KAAAC,WAAW,GAAY,KAAK;EAE4B;EAExDC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACL,eAAe,CAACM,aAAa,EAAE,CAACC,SAAS,CAAC;MAC7CC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAIA,QAAQ,CAACC,OAAO,KAAK,CAAC,EAAE;UAC1B,IAAI,CAACT,UAAU,GAAGQ,QAAQ,CAACE,IAAI;QACjC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;QAC9C;MACF,CAAC;MACDA,KAAK,EAAGA,KAAK,IAAI;QACfD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACD,CAAC;EACJ;EAEAC,WAAWA,CAACC,QAAkB;IAC5B,IAAI,CAACb,gBAAgB,GAAGa,QAAQ;IAChC,IAAI,CAACZ,WAAW,GAAG,IAAI;EACzB;EAEAa,UAAUA,CAAA;IACR,IAAI,CAACb,WAAW,GAAG,KAAK;IACxB,IAAI,CAACD,gBAAgB,GAAG,IAAI;EAC9B;EAEAe,gBAAgBA,CAACF,QAAkB;IACjC;IACAH,OAAO,CAACM,GAAG,CAAC,8BAA8B,EAAEH,QAAQ,CAAC;EACvD;EAEAI,cAAcA,CAACJ,QAAkB;IAC/B;IACAH,OAAO,CAACM,GAAG,CAAC,wBAAwB,EAAEH,QAAQ,CAAC;EACjD;CACD;AA7CYjB,qBAAqB,GAAAsB,UAAA,EARjCzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,mBAAmB;EAC7BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC3B,YAAY,EAAEC,eAAe,CAAC;EACxC2B,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EAEW3B,qBAAqB,CA6CjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}